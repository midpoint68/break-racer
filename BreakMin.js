var game;window.onload=function(){var canvas=document.getElementById('gameWindow');var ctx=canvas.getContext('2d');game=new Game(canvas,ctx,'classic')};function startup(mapFile){document.getElementById("jsonFile").style.display="none";game.loadMap(game.getDefaultMap('fromFile',mapFile));draw()}
function draw(){requestAnimationFrame(draw);game.draw()}
var SH=750;var pixSize=10;var scale=1;var w,h;function Game(canvas,ctx,carType){this.canvas=canvas;this.ctx=ctx;this.dt;this.now;this.lastFrameTime;this.mousePress=!1;this.mouseButton;this.mouseX;this.mouseY;this.mXd;this.mYd;this.play=new Play();this.menu=new MainMenu();this.garage=new Garage();this.track;this.scene=this.menu;this.car;if(carType==='classic'){this.car=ClassicCar(0,0,Math.PI/2)}
this.cam=new vec(this.car.pos.x,this.car.pos.y);this.map;this.draw=function(){this.now=performance.now();if(this.dt===undefined){this.dt=0.0;this.lastFrameTime=this.now}else{this.dt=(this.now-this.lastFrameTime)/1000;this.lastFrameTime=this.now}
this.canvas.width=window.innerWidth;this.canvas.height=window.innerHeight;scale=SH/this.canvas.height;w=this.canvas.width;h=this.canvas.height;this.scene.call()};this.goHome=function(seamless){this.scene=this.menu;this.play=new Play();this.map.clear();if(!seamless)this.car.reload()};this.title=function(y){let color=this.garage.getColor1();this.ctx.fillStyle=color;this.ctx.fillRect(w/2-24*pixSize,y,48*pixSize,2*pixSize);this.ctx.font=""+parseInt(4*pixSize)+"px Arial";this.ctx.fillStyle='rgba(0, 0, 0, 1.0)';this.ctx.fillText("BREAK RACER",w/2-24.32*pixSize,y-0.25*pixSize);this.ctx.fillStyle=color;this.ctx.fillRect(w/2+5*pixSize,y-2*pixSize,11*pixSize,0.6*pixSize);this.ctx.fillStyle=game.garage.getColor2();this.ctx.fillRect(w/2+5*pixSize,y-2.85*pixSize,4*pixSize,0.45*pixSize);this.ctx.fillRect(w/2+5*pixSize,y-1*pixSize,16*pixSize,0.75*pixSize)};this.mouseGamePos=function(){if(this.mouseX!==undefined){return new vec(this.mouseX+this.cam.x-(this.canvas.width/2)-this.car.camOffset.x,this.mouseY+this.cam.y-(this.canvas.height/2)-this.car.camOffset.y)}else{return new vec(undefined,undefined)}};this.loadMap=function(map){this.map=map};this.getDefaultMap=function(name,mapObj){let map=null;if(name==='classic'){map=new GameMap();map.test()}else if(name==='empty'){map=new GameMap()}else if(name==='fromFile'){map=new GameMap();map.setData(mapObj)}
return map}}
function mousePressed(e){game.mousePress=!0;game.mouseButton=e.button;game.mouseX=e.clientX;game.mouseY=e.clientY;game.scene.mousePressed()}
function mouseReleased(e){game.mousePress=!1;game.scene.mouseReleased()}
function mouseMoved(e){if(game.mouseButton!==undefined){if(game.mouseX!==undefined){game.mXd=e.clientX-game.mouseX;game.mYd=e.clientY-game.mouseY}
game.mouseX=e.clientX;game.mouseY=e.clientY;game.scene.mouseMoved()}}
function keyPressed(e){game.scene.keyPressed(e)}
function keyDown(e){if(game.scene==game.track)game.track.keyDown(e)}
function Button(w,h,text,funct){this.h=h;this.w=w;this.x;this.y;this.text=text;this.funct=funct;this.hover=!1;this.show=function(x,y){this.x=x;this.y=y;if(this.hover){game.ctx.strokeStyle=game.garage.getColor1();game.ctx.fillStyle='rgba(0, 0, 0, 1.0)';game.ctx.lineWidth=(pixSize/scale)/2}
else{game.ctx.strokeStyle='rgba(0, 0, 0, 0.0)';game.ctx.fillStyle='rgba(100, 100, 100, 1.0)';(pixSize/scale)/8}
game.ctx.strokeRect(x,y,this.w*(pixSize/scale),this.h*(pixSize/scale));game.ctx.font=""+parseInt(h*0.8*(pixSize/scale))+"px Arial";game.ctx.fillText(text,x+0.8*(pixSize/scale),y+this.h*0.8*(pixSize/scale))};this.check=function(mX,mY,pressed){if(this.x!==undefined){if(inBox(mX,mY,this.x,this.y,this.w*(pixSize/scale),this.h*(pixSize/scale))){if(pressed){this.funct();this.hover=!1;mouseReleased()}
else this.hover=!0}else this.hover=!1}}}
function DropDown(w,h,text,btns){this.btns=btns;this.h=h;this.w=w;this.x=0;this.y=0;this.text=text;this.hover=!1;this.open=!1;this.funct=function(){this.open=!this.open};this.show=function(x,y){this.x=x;this.y=y;if(this.hover){game.ctx.strokeStyle=game.garage.getColor1();game.ctx.fillStyle='rgba(0, 0, 0, 1.0)';game.ctx.lineWidth=(pixSize/scale)/2}
else{game.ctx.strokeStyle='rgba(0, 0, 0, 0.0)';game.ctx.fillStyle='rgba(100, 100, 100, 1.0)';(pixSize/scale)/8}
if(this.open)game.ctx.strokeRect(x,y,this.w*(pixSize/scale),this.h*(this.btns.length+1)*(pixSize/scale));else game.ctx.strokeRect(x,y,this.w*(pixSize/scale),this.h*(pixSize/scale));game.ctx.font=""+parseInt(h*0.8*(pixSize/scale))+"px Arial";game.ctx.fillText(text,x+0.8*(pixSize/scale),y+this.h*0.8*(pixSize/scale));if(this.open){for(let i=0;i<this.btns.length;i++){this.btns[i].show(x,y+(this.h*(i+1)*(pixSize/scale)))}}};this.check=function(mX,mY,pressed){let height=(this.open?this.h*(this.btns.length+1):this.h);if(inBox(mX,mY,this.x,this.y,this.w*(pixSize/scale),height*(pixSize/scale))){if(pressed){this.funct();mouseReleased()}
else this.hover=!0}else{this.hover=!1;this.open=!1}
for(let i=0;i<this.btns.length;i++){this.btns[i].check(mX,mY,pressed)}}}
function btnCheck(btns,click){if(click==undefined)click=!1;if(btns!==null){let current=btns.head;do{current.elem.check(game.mouseX,game.mouseY,click);current=current.nxt}while(current!==null&&current!==undefined);}}
function Pixel(color,structure,integrity,isTire){this.color=color;this.structure=structure;this.integrity=integrity;this.isTire=isTire;this.connection={};this.show=function(x,y){game.ctx.fillStyle=color;game.ctx.strokeStyle=color;game.ctx.lineWidth=1;game.ctx.lineCap='round';game.ctx.strokeRect(x,y,scale*pixSize,scale*pixSize);game.ctx.fillRect(x,y,scale*pixSize,scale*pixSize)};this.connect=function(connectForce,neighbor,dir){var cntion=new Connection(connectForce);this.connection[dir]=cntion;neighbor.connection[-dir]=cntion};this.clone=function(){var clone=new Pixel(this.color,this.structure,this.integrity,this.isTire);var newCntion={};newCntion[Connection.RIGHT]=this.connection[Connection.RIGHT];newCntion[Connection.LEFT]=this.connection[Connection.LEFT];newCntion[Connection.UP]=this.connection[Connection.UP];newCntion[Connection.DOWN]=this.connection[Connection.DOWN];clone.connection=newCntion;return clone}}
function Connection(connectForce){Connection.LEFT=-1;Connection.RIGHT=1;Connection.UP=-2;Connection.DOWN=2;this.connectForce=connectForce}
function Color(rh,gs,bl,a){if(a!==undefined){this.r=parseInt(rh);this.g=parseInt(gs);this.b=parseInt(bl);this.a=a;this.getColor=function(){return"rgba("+this.r+","+this.g+","+this.b+","+this.a+")"}}else{this.h=parseInt(rh);this.s=parseInt(gs);this.l=parseInt(bl);this.getColor=function(){return"hsl("+this.h+","+this.s+"%,"+this.l+"%)"}}}
function vec(x,y){return{x:x,y:y}}
function veclone(v){return new vec(v.x,v.y)}
function magnitude(v){return Math.sqrt(v.x*v.x+v.y*v.y)}
function unit(v){let mag=magnitude(v);return new vec(v.x/mag,v.y/mag)}
function rotate(p,a){let x=p.x*Math.cos(a)-p.y*Math.sin(a);let y=p.x*Math.sin(a)+p.y*Math.cos(a);return new vec(x,y)}
function getAngle(v,c){let v1=sub(v,c);var angle;if(v1.x==0){angle=(v1.y>0?(Math.PI/2):(3*Math.PI/2))}else{angle=Math.atan(v1.y/v1.x)+(v.x<c.x?Math.PI:0)}
if(angle<0)angle+=(Math.PI*2);return angle}
function addAngle(a1,a2){let angle=a1+a2;while(angle<0)angle+=(Math.PI*2);return(angle)%(Math.PI*2)}
function add(v1,v2){return new vec(v1.x+v2.x,v1.y+v2.y)}
function neg(v){return new vec(-v.x,-v.y)}
function sub(v1,v2){return new vec(v1.x-v2.x,v1.y-v2.y)}
function mult(v,a){return new vec(v.x*a,v.y*a)}
function getRectCenter(r){return add(r[0],add(mult(sub(r[1],r[0]),0.5),mult(sub(r[3],r[0]),0.5)))}
function scaleRect(r){let scaled=new Array(4);for(let i=0;i<4;i++)scaled[i]=mult(r[i],scale);return scaled}
function getSign(a){return(a/Math.abs(a))}
function constrain(val,low,high){if(val<low)return low;if(val>high)return high;return val}
function list(){this.head;this.tail;this.count=0;this.addLast=function(elem){let node=new listNode(elem);if(this.tail===undefined||this.head===undefined){this.head=node;this.tail=node}else{this.tail.nxt=node;this.tail=node}
this.count++};this.addFirst=function(elem){let node=new listNode(elem);if(this.tail===undefined||this.head===undefined){this.head=node;this.tail=node}else{node.nxt=this.head;this.head=node}
this.count++};this.remove=function(){if(this.head!==undefined&&this.head!==null){if(this.head==this.tail){this.tail=undefined}
this.head=this.head.nxt;this.count--}}}
function listNode(elem){this.nxt;this.elem=elem}
function checklistMap(map){this.width=map.length;this.height=map[0].length;this.visit=new Array(this.width*this.height);this.count=0;this.values=new Array(this.width);for(let i=0;i<this.width;i++){this.values[i]=new Array(this.height);for(let j=0;j<this.height;j++){if(map[i][j]!==undefined&&map[i][j]!==null){this.values[i][j]=map[i][j].clone();this.count++}else{this.values[i][j]=null}}}
this.visit=function(x,y){this.visit[x+(y*this.width)]=!0};this.visited=function(x,y){return this.visit[x+(y*this.width)]};this.remove=function(x,y){if(this.values[x][y]!==undefined&&this.values[x][y]!==null){this.values[x][y]=null;this.count--}};this.getMap=function(){return this.values}}
function Structure(x,y,theta,map,width,height,id){this.id=id;this.pixelMap;if(map=='SOLID_WALL'){this.type=map;this.pixelMap=new Array(width);for(let i=0;i<width;i++){this.pixelMap[i]=new Array(height);for(let j=0;j<height;j++){this.pixelMap[i][j]=new Pixel('black',this,1.0)}}}else if(map===null){this.type='OTHER';this.pixelMap=new Array(width);for(let i=0;i<width;i++){this.pixelMap[i]=new Array(height)}}else this.pixelMap=map;this.width=this.pixelMap.length*10;this.height=this.pixelMap[0].length*10;this.pos=new vec(x,y);this.theta=theta;this.vel=new vec(0,0);this.accel=new vec(0,0);this.setPixel=function(x,y,pixel){if(Number.isInteger(x)&&Number.isInteger(y)){this.pixelMap[x][y]=pixel;if(x>0){let adj=this.pixelMap[x-1][y];if(adj!==undefined&&adj!==null){pixel.connect(1.0,adj,Connection.LEFT)}}
if(x<this.pixelMap.length-1){let adj=this.pixelMap[x+1][y];if(adj!==undefined&&adj!==null){pixel.connect(1.0,adj,Connection.RIGHT)}}
if(y>0){let adj=this.pixelMap[x][y-1];if(adj!==undefined&&adj!==null){pixel.connect(1.0,adj,Connection.UP)}}
if(y<this.pixelMap[0].length-1){let adj=this.pixelMap[x][y+1];if(adj!==undefined&&adj!==null){pixel.connect(1.0,adj,Connection.DOWN)}}}};this.breakPixel=function(x,y){let rand=parseInt(Math.random()*4);if(Number.isInteger(x)&&Number.isInteger(y)){let pixel=this.pixelMap[x][y];if(x>0&&rand==0){let adj=this.pixelMap[x-1][y];if(adj!==undefined&&adj!==null){pixel.connection[Connection.LEFT]=null;adj.connection[Connection.RIGHT]=null}}
if(x<this.pixelMap.length-1&&rand==1){let adj=this.pixelMap[x+1][y];if(adj!==undefined&&adj!==null){pixel.connection[Connection.RIGHT]=null;adj.connection[Connection.LEFT]=null}}
if(y>0&&rand==2){let adj=this.pixelMap[x][y-1];if(adj!==undefined&&adj!==null){pixel.connection[Connection.UP]=null;adj.connection[Connection.DOWN]=null}}
if(y<this.pixelMap[0].length-1&&rand==3){let adj=this.pixelMap[x][y+1];if(adj!==undefined&&adj!==null){pixel.connection[Connection.DOWN]=null;adj.connection[Connection.UP]=null}}}};this.getPixel=function(x,y){if(Number.isInteger(x)&&Number.isInteger(y)){return this.pixelMap[x][y]}};this.show=function(isDebris){if(isDebris===undefined){game.ctx.save();game.ctx.translate(this.pos.x*scale,this.pos.y*scale);game.ctx.rotate(this.theta);let transX=(0-this.width/2)*scale;let transY=(0-this.height/2)*scale;game.ctx.translate(transX,transY);let height=this.pixelMap[0].length;let width=this.pixelMap.length;let color=this.pixelMap[0][0].color;game.ctx.fillStyle=color;game.ctx.strokeStyle=color;game.ctx.lineWidth=1;game.ctx.lineCap='square';game.ctx.strokeRect(0,0,scale*pixSize*width,scale*pixSize*height);game.ctx.fillRect(0,0,scale*pixSize*width,scale*pixSize*height);game.ctx.restore()}else{game.ctx.save();game.ctx.translate(this.pos.x*scale,this.pos.y*scale);game.ctx.rotate(this.theta);let height=this.pixelMap[0].length;let width=this.pixelMap.length;for(var j=0;j<height;j++){for(var i=0;i<width;i++){if(this.pixelMap[i][j]!==null&&this.pixelMap[i][j]!==undefined){this.pixelMap[i][j].show(scale*pixSize*i,scale*pixSize*j)}}}
game.ctx.restore()}};this.update=function(dt){this.vel=vec(this.vel.x*0.95,this.vel.y*0.95);this.pos=vec(this.pos.x+(this.vel.x*dt),this.pos.y+(this.vel.y*dt))};this.trim=function(){let yStart=0;let yEnd=this.pixelMap[0].length;let yTraverse=!0;let xStart=0;let xEnd=this.pixelMap.length;let xTraverse=!0;for(let j=yStart;j<yEnd;j++){let rowEmpty=!0;for(let i=xStart;i<xEnd;i++){if(this.pixelMap[i][j]!==undefined&&this.pixelMap[i][j]!==null){if(yTraverse){yTraverse=!1;yStart=j}
rowEmpty=!1}}
if(rowEmpty&&!yTraverse){yEnd=j}}
for(let i=xStart;i<xEnd;i++){let rowEmpty=!0;for(let j=yStart;j<yEnd;j++){if(this.pixelMap[i][j]!==undefined&&this.pixelMap[i][j]!==null){if(xTraverse){xTraverse=!1;xStart=i}
rowEmpty=!1}}
if(rowEmpty&&!xTraverse){xEnd=i}}
if(yStart==yEnd){return null}else{let width=xEnd-xStart;let height=yEnd-yStart;var newMap=new Array(width);for(let i=0;i<width;i++){newMap[i]=new Array(height);for(let j=0;j<height;j++){newMap[i][j]=this.pixelMap[i+xStart][j+yStart]}}
this.pixelMap=newMap;this.width=this.pixelMap.length*10;this.height=this.pixelMap[0].length*10}
return new vec(xStart,yStart)};this.setMap=function(map){this.pixelMap=map;this.width=this.pixelMap.length*10;this.height=this.pixelMap[0].length*10};this.resize=function(w,h){let pixelMap=new Array(w);for(let i=0;i<w;i++){pixelMap[i]=new Array(h);for(let j=0;j<h;j++){pixelMap[i][j]=new Pixel('black',this,1.0)}}
this.setMap(pixelMap)};this.imitate=function(struct){this.theta=struct.theta;this.vel=vec(struct.vel.x,struct.vel.y)};this.clean=function(offset){var x=0;var y=0;var map=new checklistMap(this.pixelMap);if(offset){x=this.pixelMap.length/4;y=this.pixelMap[0].length/2}
this.cleanRec(parseInt(x),parseInt(y),map);if(map.count!=0){var newStruct=new Structure(this.pos.x,this.pos.y,this.theta,map.getMap());newStruct.imitate(this);for(let i=0;i<this.pixelMap.length;i++){for(let j=0;j<this.pixelMap[0].length;j++){let pixel=newStruct.pixelMap[i][j];if(pixel!==undefined&&pixel!==null){this.pixelMap[i][j]=null}}}
var trim1=this.trim();var offset1=scale*pixSize*magnitude(trim1);var offTheta1=Math.PI/2;if(trim1.x!=0){offTheta1=Math.atan(trim1.y/trim1.x)}
var offsetX1=-1*Math.cos(newStruct.theta+offTheta1)*offset1;var offsetY1=-1*Math.sin(newStruct.theta+offTheta1)*offset1;this.pos=vec(this.pos.x+offsetX1,this.pos.y+offsetY1);var offset2=scale*pixSize*magnitude(vec(x,y));var offTheta2=Math.PI/2;if(x!=0){offTheta2=Math.atan(y/x)}
var offsetX2=Math.cos(newStruct.theta+offTheta2)*offset2;var offsetY2=Math.sin(newStruct.theta+offTheta2)*offset2;var trim2=newStruct.trim();offset2=scale*pixSize*magnitude(trim2);if(trim2.x!=0){offTheta2=Math.atan(trim2.y/trim2.x)}
offsetX2=offsetX2-Math.cos(newStruct.theta+offTheta2)*offset2;offsetY2=offsetY2-Math.sin(newStruct.theta+offTheta2)*offset2;newStruct.pos=new vec((newStruct.pos.x-offsetX2),(newStruct.pos.y-offsetY2));game.map.debris.add(newStruct)}};this.cleanRec=function(x,y,map){map.visit(x,y);var pixel=map.getMap()[x][y];if(pixel!==undefined&&pixel!==null){var cntion=pixel.connection;if(cntion[Connection.RIGHT]!==null&&cntion[Connection.RIGHT]!==undefined){cntion[Connection.RIGHT]=null;if(!map.visited(x+1,y)){map.getMap()[x+1][y].connection[Connection.LEFT]=null;this.cleanRec(x+1,y,map)}}
if(cntion[Connection.UP]!==null&&cntion[Connection.UP]!==undefined){cntion[Connection.UP]=null;if(!map.visited(x,y-1)){map.getMap()[x][y-1].connection[Connection.DOWN]=null;this.cleanRec(x,y-1,map)}}
if(cntion[Connection.LEFT]!==null&&cntion[Connection.LEFT]!==undefined){cntion[Connection.LEFT]=null;if(!map.visited(x-1,y)){map.getMap()[x-1][y].connection[Connection.RIGHT]=null;this.cleanRec(x-1,y,map)}}
if(cntion[Connection.DOWN]!==null&&cntion[Connection.DOWN]!==undefined){cntion[Connection.DOWN]=null;if(!map.visited(x,y+1)){map.getMap()[x][y+1].connection[Connection.UP]=null;this.cleanRec(x,y+1,map)}}
map.remove(x,y)}};this.collision=function(r){if(!inCircle(r[0],this.pos,((this.width>this.height)?(this.width/1.8+80):(this.height/1.8+80))))return!1;return SATCheck(r,this.getRect())};this.getRect=function(){let offX=(this.width/2);let offY=(this.height/2);let trans=rotate(new vec(-offX,-offY),this.theta);let origin=add(this.pos,trans);let rect=[origin,add(origin,rotate(new vec(this.width,0),this.theta)),add(origin,rotate(new vec(this.width,this.height),this.theta)),add(origin,rotate(new vec(0,this.height),this.theta))];return rect}}
function Car(x,y,theta,map,width,height){Structure.call(this,x,y,theta,map,width,height);this.trailX;this.trailY;this.noseTrailX;this.noseTrailY;this.camOffset=new vec(0,0);this.tireMarksRight=new list();this.tireMarksLeft=new list();this.crash=!1;this.cRect;this.crashed=function(r){this.crash=!0;this.cRect=r}
this.checkBoundColl=function(r){for(let i=0;i<this.pixelMap.length;i++){for(let j=0;j<this.pixelMap[0].length;j++){if(this.checkPixColl(i,j,r)){this.breakPixel(i,j);return}}}
return}
this.checkPixColl=function(x,y,r){let pixel=this.pixelMap[x][y];if(pixel!==undefined&&pixel!==null){let w=this.pixelMap.length;let h=this.pixelMap[0].length;let supRect=this.getRect();let rect=[new vec(supRect[0].x+(x/w)*(supRect[1].x-supRect[0].x)+(y/h)*(supRect[3].x-supRect[0].x),supRect[0].y+(x/w)*(supRect[1].y-supRect[0].y)+(y/h)*(supRect[3].y-supRect[0].y)),new vec(supRect[0].x+((x+1)/w)*(supRect[1].x-supRect[0].x)+(y/h)*(supRect[3].x-supRect[0].x),supRect[0].y+((x+1)/w)*(supRect[1].y-supRect[0].y)+(y/h)*(supRect[3].y-supRect[0].y)),new vec(0,0),new vec(supRect[0].x+(x/w)*(supRect[2].x-supRect[3].x)+((y+1)/h)*(supRect[3].x-supRect[0].x),supRect[0].y+(x/w)*(supRect[2].y-supRect[3].y)+((y+1)/h)*(supRect[3].y-supRect[0].y))];rect[2]=add(rect[3],add(rect[1],neg(rect[0])));return SATCheck(r,rect)}else return!1}
this.update=function(dt){let m=game.mouseGamePos();if(m.x!==undefined&&m.y!==undefined){if(this.trailX!==undefined&&this.trailY!==undefined){if(magnitude(vec(this.pos.x-m.x,this.pos.y-m.y))>5*scale){let velX=(this.trailX-this.pos.x)*4;let velY=(this.trailY-this.pos.y)*4;let noseX=(this.noseTrailX-this.pos.x)*4;let noseY=(this.noseTrailY-this.pos.y)*4;this.noseTrailX+=(m.x-this.noseTrailX)/2;this.noseTrailY+=(m.y-this.noseTrailY)/2;this.trailX+=(m.x-this.trailX)/20;this.trailY+=(m.y-this.trailY)/20;if(this.crash){this.checkBoundColl(this.cRect);this.clean(!0);this.pos=getOuterContact(this.pos,mult(this.vel,dt),this.getRect(),this.cRect);this.vel=getPrllVel(this.vel,this.cRect);this.crash=!1}else{this.vel=vec(this.vel.x+(velX-this.vel.x)/(scale*pixSize),this.vel.y+(velY-this.vel.y)/(scale*pixSize))}
this.pos=vec(this.pos.x+(this.vel.x*dt),this.pos.y+(this.vel.y*dt));let newAngle=Math.atan(noseY/noseX);if(Math.abs(noseX)/noseX>0){newAngle=newAngle+Math.PI}
this.theta=newAngle}}else{this.trailX=m.x;this.trailY=m.y;this.noseTrailX=m.x;this.noseTrailY=m.y}}
this.camOffset.x=-this.vel.x/8;this.camOffset.y=-this.vel.y/8;this.camScale=(scale*pixSize)/Math.sqrt(magnitude(this.vel))};this.showTireMarks=function(){game.ctx.strokeStyle='rgba(160, 160, 160, 0.5)';game.ctx.lineWidth=6;let current=this.tireMarksRight.head;let dist=0;if(current!==undefined&&current!==null){while(current.nxt!==undefined&&current.nxt!==null){dist+=1/this.tireMarksRight.count;game.ctx.beginPath();game.ctx.moveTo(current.elem.x*scale,current.elem.y*scale);game.ctx.lineWidth=6*dist;game.ctx.lineTo(current.nxt.elem.x*scale,current.nxt.elem.y*scale);game.ctx.stroke();current=current.nxt}}
current=this.tireMarksLeft.head;dist=0;if(current!==undefined&&current!==null){while(current.nxt!==undefined&&current.nxt!==null){dist+=1/this.tireMarksLeft.count;game.ctx.beginPath();game.ctx.moveTo(current.elem.x*scale,current.elem.y*scale);game.ctx.lineWidth=6*dist;game.ctx.lineTo(current.nxt.elem.x*scale,current.nxt.elem.y*scale);game.ctx.stroke();current=current.nxt}}};this.show=function(){game.ctx.save();game.ctx.translate(game.canvas.width/2,game.canvas.height/2);game.ctx.rotate(this.theta);let height=this.pixelMap[0].length;let width=this.pixelMap.length;let transX2=(0-width/4)*scale*pixSize;let transY2=(0-height/2)*scale*pixSize;game.ctx.translate(transX2,transY2);let noTires=!0;for(var j=0;j<height;j++){for(var i=0;i<width;i++){let pixel=this.pixelMap[i][j];if(pixel!==null&&pixel!==undefined){if(!game.pause){if(pixel.isTire!==undefined&&pixel.isTire!==null){noTires=!1;let xPrime=(10*(i+transX2/(scale*pixSize)))+5;let yPrime=(10*(j+transY2/(scale*pixSize)))+5;let tX=xPrime*Math.cos(this.theta)-yPrime*Math.sin(this.theta)+this.pos.x;let tY=xPrime*Math.sin(this.theta)+yPrime*Math.cos(this.theta)+this.pos.y;var list=null;if(j>=height/2){list=this.tireMarksRight}else if(j<height/2){list=this.tireMarksLeft}
if(list!==null){list.addLast(vec(tX,tY));if(list.count>160){list.remove()}}}}
pixel.show(scale*pixSize*i,scale*pixSize*j)}}}
game.ctx.restore();if(!game.pause&&noTires){game.play.endScreen=!0}};this.staticShow=function(){game.ctx.save();game.ctx.translate(this.pos.x*scale,this.pos.y*scale);game.ctx.rotate(this.theta);let transX2=(0-this.width/4)*scale;let transY2=(0-this.height/2)*scale;game.ctx.translate(transX2,transY2);let height=this.pixelMap[0].length;let width=this.pixelMap.length;for(var j=0;j<height;j++){for(var i=0;i<width;i++){if(this.pixelMap[i][j]!==null&&this.pixelMap[i][j]!==undefined){this.pixelMap[i][j].show(scale*pixSize*i,scale*pixSize*j)}}}
game.ctx.restore()};this.getRect=function(){let offX=(this.width/4);let offY=(this.height/2);let trans=rotate(new vec(-offX,-offY),this.theta);let origin=add(this.pos,trans);let rect=[origin,add(origin,rotate(new vec(this.width,0),this.theta)),add(origin,rotate(new vec(this.width,this.height),this.theta)),add(origin,rotate(new vec(0,this.height),this.theta))];return rect};this.paint=function(c1,c2){var colorM="rgba(255, 50, 50, 1.0)",colorS="rgba(100, 100, 100, 1.0)";if(c1!==undefined)colorM=c1.getColor();if(c2!==undefined)colorS=c2.getColor();this.setPixel(1,0,new Pixel('#000000',this,1.0));this.setPixel(1,3,new Pixel('#000000',this,1.0));this.setPixel(4,0,new Pixel('#000000',this,1.0,!0));this.setPixel(4,3,new Pixel('#000000',this,1.0,!0));this.setPixel(0,0,new Pixel(colorM,this,1.0));this.setPixel(0,1,new Pixel(colorM,this,1.0));this.setPixel(0,2,new Pixel(colorM,this,1.0));this.setPixel(1,1,new Pixel(colorM,this,1.0));this.setPixel(1,2,new Pixel(colorM,this,1.0));this.setPixel(0,3,new Pixel(colorM,this,1.0));this.setPixel(2,1,new Pixel(colorS,this,1.0));this.setPixel(2,2,new Pixel(colorS,this,1.0));this.setPixel(3,1,new Pixel(colorM,this,1.0));this.setPixel(3,2,new Pixel(colorM,this,1.0));this.setPixel(4,1,new Pixel(colorM,this,1.0));this.setPixel(4,2,new Pixel(colorM,this,1.0));this.setPixel(5,0,new Pixel(colorM,this,1.0));this.setPixel(5,1,new Pixel(colorM,this,1.0));this.setPixel(5,2,new Pixel(colorM,this,1.0));this.setPixel(5,3,new Pixel(colorM,this,1.0));this.trim();this.saveState()};this.saveState=function(){this.saveMap=new Array(this.pixelMap.length);for(let i=0;i<this.saveMap.length;i++){this.saveMap[i]=new Array(this.pixelMap[0].length);for(let j=0;j<this.saveMap[0].length;j++){if(this.pixelMap[i][j]!==null&&this.pixelMap[i][j]!==undefined)this.saveMap[i][j]=this.pixelMap[i][j].clone();else this.saveMap[i][j]=null}}};this.center=function(){this.pos=new vec(0,0);this.vel=new vec(0,0);this.theta=Math.PI/2;this.trailX=undefined;this.trailY=undefined;this.noseTrailX=undefined;this.noseTrailY=undefined;this.camOffset=new vec(0,0);this.tireMarksRight=new list();this.tireMarksLeft=new list();this.crash=!1;game.mouseX=undefined;game.mouseY=undefined;game.mouseButton=undefined;game.cam=new vec(0,0)};this.reload=function(){this.pixelMap=this.saveMap;this.saveState();this.center()}}
function ClassicCar(x,y,theta){var car=new Car(x,y,theta,null,6,4);car.paint();return car}
function GameMap(){this.debris=new StructureList();this.data;this.divs=new Array(10);for(let i=0;i<this.divs.length;i++){this.divs[i]=new Array(4);for(let j=0;j<this.divs[i].length;j++){this.divs[i][j]=new StructureList()}}
this.setData=function(data){if(data.wall!==null&&data.wall!==undefined){this.data=data}};this.load=function(){game.car.pos=new vec(this.data.spawnX,this.data.spawnY);game.car.theta=this.data.spawnT;let wall=this.data.wall;for(let i=0;i<wall.length;i++){if(wall[i]!==null)this.divs[0][0].add(new Structure(wall[i].xPos,wall[i].yPos,wall[i].theta,wall[i].type,wall[i].width,wall[i].height))}};this.clear=function(){this.divs=new Array(10);for(let i=0;i<this.divs.length;i++){this.divs[i]=new Array(4);for(let j=0;j<this.divs[i].length;j++){this.divs[i][j]=new StructureList()}}
this.debris=new StructureList()};this.update=function(dt){for(let d=0;d<this.divs.length;d++){for(let dd=0;dd<this.divs[d].length;dd++){let div=this.divs[d][dd];let node=div.iterate();if(node!==undefined&&node!==null){var struct;do{struct=node.struct;struct.update(dt);node=div.iterate(node)}while(node!==null&&node!==undefined);}}}
let node=this.debris.iterate();if(node!==undefined&&node!==null){var struct;do{struct=node.struct;struct.update(dt);node=this.debris.iterate(node)}while(node!==null&&node!==undefined);}};this.show=function(){for(let d=0;d<this.divs.length;d++){for(let dd=0;dd<this.divs[d].length;dd++){let div=this.divs[d][dd];let node=div.iterate();if(node!==undefined&&node!==null){var struct;do{struct=node.struct;struct.show();node=div.iterate(node)}while(node!==null&&node!==undefined);}}}
let node=this.debris.iterate();if(node!==undefined&&node!==null){var struct;do{struct=node.struct;struct.show(!0);node=this.debris.iterate(node)}while(node!==null&&node!==undefined);}};this.collisionCheck=function(r){let collider;do{collider=this.divs[0][0].iterate(collider)}
while(collider!==null&&collider!==undefined&&!collider.struct.collision(r));if(collider!==undefined&&collider!==null)return collider.struct;else return null}}
function StructureList(){this.head;this.tail;this.add=function(struct){var node=new SNode(struct);if(!this.head){this.head=node;this.tail=node}else{this.tail.nxt=node;this.tail=node}};this.remove=function(struct){var prev;var current=this.head;while(current!==undefined&&current!==null&&current.struct.id!=struct.id){prev=current;current=current.nxt}
if(current!==undefined&&current!==null){if(current==this.head){this.head=current.nxt}else{prev.nxt=current.nxt}
return current}else{return null}};this.iterate=function(current){if(current===null||current===undefined){return this.head}else{return current.nxt}}}
function SNode(struct){this.struct=struct;this.nxt}
function SATCheck(r1,r2,final){var mB,mN;let testSlope1=slope(r1[0],r1[1]);let testSlope2=slope(r1[0],r1[3]);if(testSlope1!==undefined&Math.abs(testSlope1)<1){mB=testSlope1;mN=invSlope(r1[0],r1[3])}
else{mB=testSlope2;mN=invSlope(r1[0],r1[1])}
let b1=new Array(4),b2=new Array(4);let n1=new Array(4),n2=new Array(4);for(let i=0;i<4;i++){b1[i]=r1[i].y-(mB*r1[i].x);b2[i]=r2[i].y-(mB*r2[i].x);n1[i]=r1[i].x-(mN*r1[i].y);n2[i]=r2[i].x-(mN*r2[i].y)}
let r1b=b1[0],r2b=b2[0],r1n=n1[0],r2n=n2[0];if(r2b>r1b){for(let i=1;i<4;i++){if(b1[i]>r1b)r1b=b1[i];if(b2[i]<r2b)r2b=b2[i]}
if(r2b>r1b)return!1}else if(r2b<r1b){for(let i=1;i<4;i++){if(b1[i]<r1b)r1b=b1[i];if(b2[i]>r2b)r2b=b2[i]}
if(r2b<r1b)return!1}
if(r2n>r1n){for(let i=1;i<4;i++){if(n1[i]>r1n)r1n=n1[i];if(n2[i]<r2n)r2n=n2[i]}
if(r2n>r1n)return!1}else if(r2n<r1n){for(let i=1;i<4;i++){if(n1[i]<r1n)r1n=n1[i];if(n2[i]>r2n)r2n=n2[i]}
if(r2n<r1n)return!1}
if(final!==undefined&&final)return!0;else return SATCheck(r2,r1,!0)}
function inBox(x1,y1,x2,y2,w,h){if(x1<(x2+w)&&x1>=x2&&y1<(y2+h)&&y1>=y2){return!0}else return!1}
function inRect(pos,rect){let r=[pos,add(pos,new vec(1,0)),add(pos,new vec(1,1)),add(pos,new vec(0,1))];return SATCheck(r,rect)}
function inCircle(p,c,r){return(magnitude(sub(p,c))<r)}
function slope(p1,p2){if((p2.x-p1.x)===0)return undefined;else return((p2.y-p1.y)/(p2.x-p1.x))}
function invSlope(p1,p2){if((p2.y-p1.y)===0)return undefined;else return((p2.x-p1.x)/(p2.y-p1.y))}
function getPrllVel(vel,rect){let r=[new vec(0,0),sub(rect[1],rect[0]),sub(rect[2],rect[0]),sub(rect[3],rect[0])];var reference;if(magnitude(r[1])>magnitude(r[3])){reference=r[1]}else{reference=r[3]}
let angle=Math.asin((reference.y)/magnitude(reference))+((reference.x<r[0].x)?Math.PI:0);let velAngle=Math.asin(vel.y/magnitude(vel))+((vel.x<0)?Math.PI:0);let diffAngle=Math.abs(velAngle-angle);let newVel=mult(reference,magnitude(vel)*Math.cos(diffAngle)/magnitude(reference));return newVel}
function getOuterContact(pos,vel,r1,r2){let rect=[new vec(0,0),sub(r2[1],r2[0]),sub(r2[2],r2[0]),sub(r2[3],r2[0])];var reference;if(magnitude(rect[1])>magnitude(rect[3])){reference=rect[1]}else{reference=rect[3]}
let posPerpVel=rotate(unit(sub(reference,rect[0])),Math.PI/2);let negPerpVel=neg(posPerpVel);posPos=new vec(pos.x,pos.y);negPos=new vec(pos.x,pos.y);posR=[veclone(r1[0]),veclone(r1[1]),veclone(r1[2]),veclone(r1[3])];negR=[veclone(r1[0]),veclone(r1[1]),veclone(r1[2]),veclone(r1[3])];let i=0;for(;i<10000;i++){posPos=add(posPos,posPerpVel);negPos=add(negPos,negPerpVel);for(let i=0;i<4;i++){posR[i]=add(posR[i],posPerpVel);negR[i]=add(negR[i],negPerpVel)}
if(!SATCheck(posR,r2)){pos=posPos;break}
if(!SATCheck(negR,r2)){pos=negPos;break}}
return pos}
function Track(mapData){this.data=mapData;this.wall=new Array(this.data.wall.length);this.numWalls=0;game.car.theta=this.data.spawnT;game.car.pos=new vec(this.data.spawnX,this.data.spawnY);let wall=this.data.wall;for(let i=0;i<wall.length;i++){if(wall[i]!==null&&wall[i]!==undefined){this.wall[i]=new Structure(wall[i].xPos,wall[i].yPos,wall[i].theta,wall[i].type,wall[i].width,wall[i].height,this.numWalls);this.numWalls++}}
this.camPos=new vec(0,0);this.sceneBtns=new list();this.homeBtn=new Button(11,3,"HOME",function(){if(!game.track.saved&&!confirm("The track is not saved. Are you sure you want to discard changes?"))return;game.goHome()});this.saveBtn=new Button(11,3,"SAVE",function(){game.track.saved=!0;game.track.saveData();game.map.data=game.track.data});this.newBtn=new Button(11,3,"NEW",function(){let data={name:"Break Racer Track",spawnX:0,spawnY:0,spawnT:(Math.PI/2),wall:new Array(10)};game.track=new Track(data);game.scene=game.track});this.exportBtn=new Button(11,3,"EXPORT",function(){let name=prompt("Enter track name:");game.track.data.name=name;game.track.saveBtn.funct();let jsonData=JSON.stringify(game.track.data);download(jsonData,""+((name!==null&&name!=="")?name:"Break Racer Track")+".json",'text/plain')});this.structBtn=new Button(7,3,"wall",function(){game.track.addStruct()});this.addBtn=new DropDown(7,3,"add",[this.structBtn]);this.sceneBtns.addLast(this.homeBtn);this.sceneBtns.addLast(this.saveBtn);this.sceneBtns.addLast(this.newBtn);this.sceneBtns.addLast(this.exportBtn);this.sceneBtns.addLast(this.addBtn);this.selected=null;this.rotate=!1;this.rotateHover=!1;this.scale=!1;this.scaleHover=null;this.scaleCorner=null;this.saved=!0;this.call=function(){game.sceneBtns=this.btns;let w=game.canvas.width,h=game.canvas.height;game.ctx.fillStyle="rgba(230, 230, 230, 0.5)";game.ctx.fillRect(0,0,9*pixSize,6*pixSize+(this.addBtn.open?3*pixSize:0));game.ctx.fillRect(w-13*pixSize,0,13*pixSize,18*pixSize);this.homeBtn.show(w-12*pixSize,pixSize);this.newBtn.show(w-12*pixSize,5*pixSize);this.saveBtn.show(w-12*pixSize,9*pixSize);this.exportBtn.show(w-12*pixSize,13*pixSize);this.addBtn.show(pixSize,pixSize);game.ctx.save();game.ctx.translate(this.camPos.x*scale,this.camPos.y*scale);this.showStructures();this.showSelected();game.ctx.restore()};this.saveData=function(){let wall=this.wall;let wallData=new Array(wall.length);for(let i=0;i<wall.length;i++){let w=wall[i];if(w!==null&&w!==undefined)wallData[i]={xPos:w.pos.x,yPos:w.pos.y,theta:w.theta,type:w.type,width:w.pixelMap.length,height:w.pixelMap[0].length}}
this.data.wall=wallData;this.data.spawnX=game.car.pos.x;this.data.spawnY=game.car.pos.y;this.data.spawnT=game.car.theta};this.worldMousePos=function(){if(game.mouseX!==undefined){return sub(mult(new vec(game.mouseX-(game.canvas.width/2),game.mouseY-(game.canvas.height/2)),1/scale),this.camPos)}else{return new vec(undefined,undefined)}};this.showStructures=function(){game.ctx.save();game.ctx.translate(game.canvas.width/2,game.canvas.height/2);for(let i=0;i<this.wall.length;i++){let wall=this.wall[i];if(wall!==undefined&&wall!==null){this.wall[i].show()}}
game.car.staticShow();game.ctx.restore()};this.addStruct=function(struct){if(struct===undefined)this.wall[this.numWalls]=new Structure(-this.camPos.x,-this.camPos.y,0,"SOLID_WALL",20,2,this.numWalls);else this.wall[this.numWalls]=struct;this.numWalls++};this.removeStruct=function(){let id=this.selected.id;let newWalls=new Array(this.wall.length-1);this.numWalls=0;for(let i=0;i<this.wall.length;i++){if(this.wall[i]!==null&&this.wall[i]!==undefined){if(i<id){newWalls[i]=this.wall[i];this.numWalls++}else if(i>id){newWalls[i-1]=this.wall[i];newWalls[i-1].id=(i-1);this.numWalls++}}}
this.wall=newWalls};this.duplicateStruct=function(){let s=this.selected;this.addStruct(new Structure(-this.camPos.x,-this.camPos.y,s.theta,s.type,s.pixelMap.length,s.pixelMap[0].length,this.numWalls))};this.showSelected=function(){game.ctx.save();game.ctx.translate(game.canvas.width/2,game.canvas.height/2);if(this.selected!==null){let r=scaleRect(this.selected.getRect());game.ctx.strokeStyle="rgba(255, 255, 0, 1.0)";game.ctx.lineWidth=2;rect(r);let rEdit=new Array(4);rEdit[0]=add(r[0],mult(add(unit(sub(r[0],r[3])),unit(sub(r[0],r[1]))),5));rEdit[1]=add(r[1],mult(add(unit(sub(r[1],r[2])),unit(sub(r[1],r[0]))),5));rEdit[2]=add(r[2],mult(add(unit(sub(r[2],r[1])),unit(sub(r[2],r[3]))),5));rEdit[3]=add(r[3],mult(add(unit(sub(r[3],r[0])),unit(sub(r[3],r[2]))),5));this.rotateHover=!1;this.scaleHover=null;let rotatePos=add(mult(add(rEdit[1],rEdit[2]),0.5),mult(unit(sub(rEdit[1],rEdit[0])),10));if(inCircle(mult(this.worldMousePos(),scale),rotatePos,8)){game.ctx.strokeStyle="rgba(100, 100, 100, 1.0)";this.rotateHover=!0}else{game.ctx.strokeStyle="rgba(220, 220, 220, 1.0)"}
rotateIcon(rotatePos,this.selected.theta);if(this.selected!=game.car){for(let i=0;i<4;i++){let radius=6;if(inCircle(mult(this.worldMousePos(),scale),rEdit[i],radius)){game.ctx.strokeStyle="rgba(100, 100, 100, 1.0)";this.scaleHover=i}else{game.ctx.strokeStyle="rgba(220, 220, 220, 1.0)"}
game.ctx.beginPath();ellipse(rEdit[i].x,rEdit[i].y,radius,radius);game.ctx.stroke()}}}
game.ctx.restore()};this.setRotation=function(){let angle=getAngle(this.worldMousePos(),this.selected.pos);this.selected.theta=angle};this.setScale=function(){let corn=rotate(this.selected.getRect()[this.scaleCorner],-this.selected.theta);let dist=sub(rotate(this.worldMousePos(),-this.selected.theta),corn);dist.x=dist.x*getSign(corn.x-rotate(this.selected.pos,-this.selected.theta).x);dist.y=dist.y*getSign(corn.y-rotate(this.selected.pos,-this.selected.theta).y);let w=constrain((this.selected.pixelMap.length+Math.floor(dist.x/10)),1,128);let h=constrain((this.selected.pixelMap[0].length+Math.floor(dist.y/10)),1,128);this.selected.resize(w,h)};this.select=function(){let worldMouse=this.worldMousePos();carRect=game.car.getRect();if(inRect(worldMouse,carRect)){this.saved=!1;return game.car}
for(let i=0;i<this.wall.length;i++){let w=this.wall[i];if(w!==undefined&&w!==null){if(inRect(worldMouse,w.getRect())){this.saved=!1;return w}}}
return null};this.resetValues=function(){this.selected=null;this.rotate=!1;this.rotateHover=!1;this.scale=!1;this.scaleHover=null;this.scaleCorner=null};this.mousePressed=function(){btnCheck(this.sceneBtns,!0);if(this.rotateHover){this.rotate=!0}else if(this.scaleHover!==null){this.scale=!0;this.scaleCorner=this.scaleHover}else this.selected=this.select()};this.mouseReleased=function(){game.canvas.style.cursor="default";this.rotate=!1;this.scale=!1};this.mouseMoved=function(){btnCheck(this.sceneBtns);if(game.mousePress){if(this.selected===null){game.canvas.style.cursor="all-scroll";this.camPos.x+=game.mXd/scale;this.camPos.y+=game.mYd/scale}else if(this.rotate){this.setRotation()}else if(this.scale){this.setScale()}else{this.selected.pos=add(this.selected.pos,new vec(game.mXd/scale,game.mYd/scale))}}};this.keyPressed=function(e){if((e.key=='d'||e.key=='D')&&this.selected!=game.car&&this.selected!==null&&this.selected!==undefined){this.duplicateStruct()}
if(e.key=='s'||e.key=='S'){this.addStruct()}};this.keyDown=function(e){if((e.keyCode==8||e.keyCode==46)&&this.selected!=game.car&&this.selected!==null&&this.selected!==undefined){this.removeStruct();this.resetValues()}}}
function download(content,fileName,contentType){var a=document.createElement("a");var file=new Blob([content],{type:contentType});a.href=URL.createObjectURL(file);a.download=fileName;a.click()}
function loadFile(){this.receivedText=function(e){let lines=e.target.result;var newArr=JSON.parse(lines);startup(newArr)};var input,file,fr;if(typeof window.FileReader!=='function'){alert("The file API isn't supported on this browser yet.");return}
input=document.getElementById('fileinput');if(!input){alert("Couldn't find the fileinput element.")}
else if(!input.files){alert("This browser doesn't seem to support the `files` property of file inputs.")}
else if(!input.files[0]){alert("Please select a file before clicking 'Load'")}
else{file=input.files[0];fr=new FileReader();fr.onload=receivedText;fr.readAsText(file)}}
function rect(r){game.ctx.beginPath();game.ctx.moveTo(r[0].x,r[0].y);game.ctx.lineTo(r[1].x,r[1].y);game.ctx.lineTo(r[2].x,r[2].y);game.ctx.lineTo(r[3].x,r[3].y);game.ctx.lineTo(r[0].x,r[0].y);game.ctx.stroke()}
function ellipse(x,y,w,h){let ctx=game.ctx;ctx.moveTo(x+w,y);ctx.ellipse(x,y,w,h,0,0,Math.PI*2)}
function rotateIcon(pos,angle){game.ctx.save();game.ctx.translate(pos.x,pos.y);game.ctx.rotate(angle);game.ctx.beginPath();game.ctx.moveTo(-4,-8);game.ctx.ellipse(-9,0,10,8,0,-Math.PI/3,Math.PI/3);game.ctx.stroke();game.ctx.beginPath();game.ctx.moveTo(-4,-4);game.ctx.lineTo(-4,-8);game.ctx.lineTo(0,-8);game.ctx.stroke();game.ctx.beginPath();game.ctx.moveTo(-4,4);game.ctx.lineTo(-4,8);game.ctx.lineTo(0,8);game.ctx.stroke();game.ctx.restore()}
function Garage(){this.color1=-1;this.color2=-1;this.sceneBtns=new list();this.homeBtn=new Button(9,3,"HOME",function(){game.goHome(!0)});this.sceneBtns.addLast(this.homeBtn);this.call=function(){game.play.call();game.title(h/2-24*pixSize);this.homeBtn.show(w/2+14*pixSize,h/2-21*pixSize);game.ctx.lineWidth=2;for(let i=0;i<36;i++){let x=w/2-24*pixSize+i*(pixSize);let y1=h/2-21*pixSize;let y2=h/2-19*pixSize;game.ctx.fillStyle="hsl("+(i*10)+","+100+"%,"+50+"%)";game.ctx.fillRect(x,y1,pixSize,pixSize);if(inBox(game.mouseX,game.mouseY,x,y1,pixSize,pixSize)){game.ctx.strokeStyle="rgba(255, 255, 255, 1.0)";game.ctx.strokeRect(x,y1,pixSize,pixSize);if(game.mousePress){this.color1=i;this.paintCar()}}
game.ctx.fillStyle="hsl(0,0%,"+parseInt(i*100/36)+"%)";game.ctx.fillRect(x,y2,pixSize,pixSize);if(inBox(game.mouseX,game.mouseY,x,y2,pixSize,pixSize)){game.ctx.strokeStyle="rgba(255, 0, 0, 1.0)";game.ctx.strokeRect(x,y2,pixSize,pixSize);if(game.mousePress){this.color2=i;this.paintCar()}}}
if(this.color1!=-1){game.ctx.strokeStyle="rgba(255, 255, 255, 1.0)";game.ctx.strokeRect(w/2-24*pixSize+this.color1*(pixSize),h/2-21*pixSize,pixSize,pixSize)}
if(this.color2!=-1){game.ctx.strokeStyle="rgba(255, 0, 0, 1.0)";game.ctx.strokeRect(w/2-24*pixSize+this.color2*(pixSize),h/2-19*pixSize,pixSize,pixSize)}};this.mousePressed=function(){btnCheck(this.sceneBtns,!0)};this.mouseReleased=function(){};this.mouseMoved=function(){btnCheck(this.sceneBtns)};this.keyPressed=function(){};this.paintCar=function(){let c1=this.color1,c2=this.color2;if(c1==-1)c1=new Color(255,50,50,1.0);else c1=new Color(c1*10,100,50);if(c2==-1)c2=new Color(100,100,100,1.0);else c2=new Color(0,0,parseInt(c2*100/36));game.car.paint(c1,c2)};this.getColor1=function(){let c1=this.color1;if(c1==-1)c1=new Color(255,50,50,1.0);else c1=new Color(c1*10,100,50);return c1.getColor()};this.getColor2=function(){let c2=this.color2;if(c2==-1)c2=new Color(100,100,100,1.0);else c2=new Color(0,0,parseInt(c2*100/36));return c2.getColor()}}
function Play(){this.pause=!1;this.endScreen=!1;this.pauseBtns=new list();this.homeBtn=new Button(9,3,"HOME",function(){game.goHome()});this.pauseBtns.addLast(this.homeBtn);this.call=function(){game.cam.x=game.car.pos.x;game.cam.y=game.car.pos.y;game.ctx.save();game.ctx.translate(game.car.camOffset.x*scale,game.car.camOffset.y*scale);game.ctx.save();game.ctx.translate(game.canvas.width/2-game.cam.x*scale,game.canvas.height/2-game.cam.y*scale);if(!this.pause&&!this.endScreen){let structHit=game.map.collisionCheck(game.car.getRect());if(structHit!==undefined&&structHit!==null){game.car.crashed(structHit.getRect())}
game.car.update(game.dt);game.map.update(game.dt)}
game.map.show();game.car.showTireMarks();game.ctx.restore();game.car.show();game.ctx.restore();if(this.endScreen){this.end()}
if(this.pause){this.pauseGame();this.homeBtn.show(game.canvas.width-pixSize*10,pixSize)}};this.pauseGame=function(){let x=0;let y=0;game.ctx.fillStyle='rgba(100, 100, 100, 0.2)';game.ctx.fillRect(x,y,w,h);game.ctx.fillStyle='rgba(255, 255, 255, 0.8)';game.ctx.fillRect(x+pixSize,y+pixSize,pixSize,3*pixSize);game.ctx.fillRect(x+3*pixSize,y+pixSize,pixSize,3*pixSize)};this.end=function(){let x=0;let y=0;game.ctx.fillStyle='rgba(100, 100, 100, 0.2)';game.ctx.fillRect(x,y,w,h);game.ctx.fillStyle='rgba(255, 255, 255, 1.0)';game.ctx.font=""+Math.floor(24*scale)+"px Arial";game.ctx.fillText("Your vehicle has been dessimated.",w/2+40*scale,h/2.5);game.ctx.fillText("Congratulations.",w/2+40*scale,h/2.5+26*scale);game.ctx.font=""+Math.floor(18*scale)+"px Arial";game.ctx.fillText("Press ENTER to restart.",w/2+40*scale,h/2.5+62*scale)};this.mousePressed=function(){if(this.pause)btnCheck(this.pauseBtns)};this.mouseReleased=function(){};this.mouseMoved=function(){if(this.pause)btnCheck(this.pauseBtns)};this.keyPressed=function(e){if((e.key=='p'||e.key=='P')){this.pause=!this.pause;this.STOP=!1}
else if(e.keyCode==13&&this.endScreen)game.goHome()}}
function MainMenu(){this.sceneBtns=new list();this.playBtn=new Button(15,3,"PLAY",function(){game.play=new Play();game.scene=game.play;game.car.reload();game.map.load()});this.garageBtn=new Button(15,3,"GARAGE",function(){game.scene=game.garage});this.trackBtn=new Button(15,3,"TRACK",function(){game.car.center();game.track=new Track(game.map.data);game.scene=game.track});this.sceneBtns.addLast(this.playBtn);this.sceneBtns.addLast(this.garageBtn);this.sceneBtns.addLast(this.trackBtn);this.call=function(){game.play.call();this.playBtn.show(w/2-24*pixSize,h/2-20*pixSize);this.garageBtn.show(w/2-24*pixSize,h/2-15*pixSize);this.trackBtn.show(w/2-24*pixSize,h/2-10*pixSize);game.ctx.fillStyle='rgba(100, 100, 100, 0.2)';game.ctx.fillRect(0,0,w,h);game.title(h/2-24*pixSize)};this.mousePressed=function(){btnCheck(this.sceneBtns,!0)};this.mouseReleased=function(){};this.mouseMoved=function(){btnCheck(this.sceneBtns)};this.keyPressed=function(){}}